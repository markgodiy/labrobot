<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="inertial_macros.xacro" />


    <!-- MATERIALS -->
    <material name="black">
        <color rgba="0.1 0.1 0.1 1" />
    </material>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1  1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1" />
    </material>

    <material name="red">
        <color rgba="1 0.1 0.1 1" />
    </material>

    <!-- DIMENSIONS -->

    <!-- XYZ
        x points towards front
        y points left
        z points up
    -->

    <!-- RPY
        R = roll (rotation around x-axis)
        P = pitch (rotation around y-axis)
        Y = yaw (rotation around z-axis)
    -->


    <!-- x -->
    <xacro:property name="chassis_depth" value="0.368" />
    <!-- y -->
    <xacro:property name="chassis_width" value="0.321" />
    <!-- z -->
    <xacro:property name="chassis_height" value="0.620" />

    <xacro:property name="wheel_diameter" value="0.065" />
    <xacro:property name="wheel_radius" value="${wheel_diameter / 2}" />
    <xacro:property name="wheel_length" value="0.026" />

    <!-- the motor mount affects axis of wheels by -20mm from base -->
    <xacro:property name="motor_mount_offset" value="0.020" />

    <!-- if tires are touching ground, then base is offset by 52.5mm    -->
    <xacro:property name="chassis_z" value="${(wheel_radius + motor_mount_offset) + chassis_height / 2}" />

    <!-- 
        origin should be center of the wheelbase axis, wheel radius from the front of the chassis
    -->
    <xacro:property name="wheelbase_x" value="${chassis_depth / 2}" />
    <xacro:property name="wheelbase_y" value="${chassis_width / 2}" />
    <xacro:property name="wheel_y" value="${wheelbase_y + (wheel_length / 2)}" />

    <xacro:property name="caster_x" value="- ${chassis_width / 3} - ${wheel_radius}" />

   <!-- BASE LINK -->
    <link name="base_link">

    </link>

    <!-- CHASSIS  Joint + Link -->
    <joint name="chassis_to_base_link" type="fixed">
        <parent link="base_link" />
        <child link="chassis" />
        <origin xyz="0 0 0" rpy="0 0 0" /> <!-- Centered on origin -->
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 ${chassis_z}" rpy="0 0 0" /> <!-- Centered on origin -->
            <geometry>
                <box size="${chassis_depth} ${chassis_width} ${chassis_height}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_z}" rpy="0 0 0" /> <!-- Centered on origin -->
            <geometry>
                <box size="${chassis_depth} ${chassis_width} ${chassis_height}" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="7.5" x="${chassis_depth}" y="${chassis_width}"
            z="${chassis_height}">
            <origin xyz="0 0 ${chassis_z}" rpy="0 0 0" /> <!-- Centered on origin -->
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- LEFT WHEEL Joint + Link -->

    <joint name="left_wheel_to_base_link" type="continuous">
        <parent link="base_link" />
        <child link="left_wheel" />
        <origin xyz="0 ${wheel_y} ${wheel_radius}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <link name="left_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <!-- RIGHT WHEEL Joint + Link -->

    <joint name="right_wheel_to_base_link" type="continuous">
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin xyz="0 -${wheel_y} ${wheel_radius}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <link name="right_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <!-- CASTER WHEEL (Spherical, for simulation stability) -->
    <joint name="caster_wheel_f_joint" type="fixed">
        <parent link="base_link" />
        <child link="caster_wheel_f" />
        <origin xyz="-${(wheelbase_x) - (wheel_radius)} 0 0.02" rpy="0 0 0" />
    </joint>

    <link name="caster_wheel_f">
        <visual>
            <geometry>
                <sphere radius="0.02" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.02" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="0.02">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel_f">
        <material>Gazebo/Blue</material>
        <mu1 value="0.001" />
        <mu2 value="0.001" />
    </gazebo>

    <!-- CASTER WHEEL (Spherical, for simulation stability) -->
    <joint name="caster_wheel_b_joint" type="fixed">
        <parent link="base_link" />
        <child link="caster_wheel_b" />
        <origin xyz="${(wheelbase_x) - (wheel_radius)} 0 0.02" rpy="0 0 0" />
    </joint>

    <link name="caster_wheel_b">
        <visual>
            <geometry>
                <sphere radius="0.02" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.02" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="0.02">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel_b">
        <material>Gazebo/Blue</material>
        <mu1 value="0.001" />
        <mu2 value="0.001" />
    </gazebo>

    <!-- FRONT MARKER (visual only) -->
    <link name="front_marker">
        <visual>
            <origin xyz="${chassis_depth/2 + 0.05} 0 ${chassis_z + 0.05}" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.01" length="0.05" />
            </geometry>
            <material name="red" />
        </visual>
    </link>
    <joint name="front_marker_joint" type="fixed">
        <parent link="base_link" />
        <child link="front_marker" />
        <origin xyz="${chassis_depth/2 + 0.05} 0 ${chassis_z + 0.05}" rpy="0 0 0" />
    </joint>

</robot>